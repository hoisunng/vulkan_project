name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VULKAN_VERSION: 1.2.154.0
  VULKAN_SDK_PATH: "$GITHUB_WORKSPACE/vulkan_sdk"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Prepare build environment
      shell: bash
      run: |
        sudo apt install -y ninja-build

    - name: Install Vulkan
      run: |
        # Download Vulkan SDK
        curl -LS -o vulkansdk.tar.gz \
          https://sdk.lunarg.com/sdk/download/${{env.VULKAN_VERSION}}/linux/vulkansdk-linux-x86_64-${{env.VULKAN_VERSION}}.tar.gz
        # Create Vulkan SDK directory and extract
        mkdir "${{env.VULKAN_SDK_PATH}}"
        tar xfz vulkansdk.tar.gz -C "${{env.VULKAN_SDK_PATH}}"

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: |
        export VULKAN_SDK="${{env.VULKAN_SDK_PATH}}/${{env.VULKAN_VERSION}}/x86_64"
        cmake \
          -S$GITHUB_WORKSPACE \
          -B${{runner.workspace}}/build \
          -GNinja \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build ${{runner.workspace}}/build
