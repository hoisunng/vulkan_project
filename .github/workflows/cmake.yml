name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Prepare build environment
      shell: bash
      run: |
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qP /etc/apt/sources.list.d http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
        sudo apt-get update
        sudo apt-get install -y \
          ninja-build \
          vulkan-sdk \
          libgl-dev \
          xorg-dev \
          libx11-dev \
          libx11-xcb-dev \
          libxcb-icccm4-dev \
          libxcb-image0-dev \
          libxcb-keysyms1-dev \
          libxcb-randr0-dev \
          libxcb-render-util0-dev \
          libxcb-render0-dev \
          libxcb-shape0-dev \
          libxcb-sync-dev \
          libxcb-xfixes0-dev \
          libxcb-xinerama0-dev \
          libxcb-xkb-dev

        sudo pip3 install conan
        
        # Tell Conan to use CXX11 ABI
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: |
        cmake \
          -S$GITHUB_WORKSPACE \
          -B${{runner.workspace}}/build \
          -GNinja \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build ${{runner.workspace}}/build
